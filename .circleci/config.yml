version: 2.1

orbs:
  codecov: codecov/codecov@1.0.4

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - checkout_code
      - bundle_dependencies:
          requires:
            - checkout_code
      - run_tests:
          requires:
            - bundle_dependencies
      - lint_code:
          requires:
            - bundle_dependencies
      - analyze_coverage:
          requires:
            - run_tests
            - bundle_dependencies
      - build_jar:
          requires:
            - run_tests
            - lint_code
            - analyze_coverage
      - release_to_github:
          requires:
            - build_jar
          filters:
            branches:
              only: master

jobs:
  checkout_code:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo

    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo

  bundle_dependencies:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo

    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}

      - run: gradle dependencies

      - save_cache:
          key: v1-dependencies-{{ checksum "build.gradle" }}
          paths:
            - ~/repo/.gradle

  run_tests:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo

    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
      - run: gradle test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
      - save_cache:
          key: v1-jacoco-{{ checksum "build/jacoco/test.exec" }}
          paths:
            - ~/repo/build/jacoco
            - ~/repo/build/classes
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  lint_code:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo

    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
      - run: gradle checkstyleMain
      - run: gradle checkstyleTest
      - store_artifacts:
          path: ~/repo/build/reports/checkstyle

  analyze_coverage:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo

    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
      - restore_cache:
          keys:
            - v1-jacoco-
      - run: gradle jacocoTestReport
      - run: gradle jacocoTestCoverageVerification
      - run:
          name: Save coverage results
          command: |
            mkdir -p ~/coverage-results/
            find . -type f -regex ".*/jacocoTestReport.xml" -exec cp {} ~/coverage-results/ \;
      - store_artifacts:
          path: ~/coverage-results/
      - codecov/upload:
          file: ~/coverage-results/jacocoTestReport.xml

  build_jar:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo

    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
      - run: gradle jar
      - run:
          name: Save JAR file
          command: |
            mkdir -p ~/jar-file/
            find . -type f -regex ".*/build/libs/.*jar" -exec cp {} ~/jar-file/ \;
      - store_artifacts:
          path: ~/jar-file/
      - persist_to_workspace:
          root: build
          paths:
            - libs

  release_to_github:
    docker:
      - image: cibuilds/github:0.12

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/repo/build
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(find ~/repo/build/libs/ -name '*.jar' | cut -d  '-' -f 2)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1}
            -delete ${VERSION} ~/repo/build/libs/